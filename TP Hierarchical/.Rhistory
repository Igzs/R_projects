1+1
install_course("Exploratory Data Analysis")
library swirl
library("swirl")
install_course("Exploratory Data Analysis")
swirl()
install ggplot2
install("ggplot2")
install_library("ggplot2")
library("ggplot2")
library("ggplot2")
install.packages("ggplot2")
library("ggplot2")
swirl()
pollution.head
head(pollution)
dim(pollution)
summary(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm,c="b")
boxplot(ppm,col="blue")
?abline
abline(h=12)
hist(ppm,col="green")
?rug
rug(ppm)
hist(low)
low
hist(ppm,col="green")
rug(ppm)
low
high
hist(ppm,col="green",breaks=100)
rug(ppm)
hist(ppm,col="green")
abline(v=12)
abline(v=12,lwd=2)
abline(v=median(ppm),col="magenta",lwd=4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(reg,col="wheat",main="Number of Counties in Each Region")
boxplot(pm25~region,col="red")
boxplot(pollution,pm25~region,col="red")
?boxplot
boxplot(pm25~region,pollution,col="red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east <- subset(pollution,region="east")
east <- subset(pollution,region=="east")
east.head
head(east)
hist(east$pm25,col="green")
hist(subset(pollution,region=="west")$pm25,col="green")
plot(pollution,)
with(pollution,plot((latitude,pm25)))
with(pollution, plot(latitude, pm25))
?with
abline(12)
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude,ppm,col=pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow = c(1,2)), mar= c(5,4,2,1)
par(mfrow = c(1,2)) mar= c(5,4,2,1)
(par(mfrow = c(1,2)) mar= c(5,4,2,1))
par(mfrow = c(1, 2),
| mar = c(5, 4, 2, 1))
par(mfrow = c(1, 2) mar = c(5, 4, 2, 1))
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west = subset(pollution, latitude ~ pm25)
head(pollution)
west <- subset(pollution, latitude ~ pm25)
west <- subset(pollution, region="west")
west <- subset(pollution, region=="west")
plot(west$latitude,west$pm25,main="west")
plot(west$latitude,west$pm25,main="West")
plot(east$latitude,east$pm25,main="East")
?Devices
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.copy(png,file="geyserplot.png")
dev.off()
head(cars)
with(cars,plot(speed,dist))
plot(cars$speed,cars$dist)
with(cars,plot(speed,dist))
text(mean(cars$speed),max(cars$dist),"SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, state, layout=c(4,1))
xyplot(Life.Exp ~ Income | region, state, layout=c(2,2))
head(mpg)
dim(mpg)
table(argument$model)
table(mpg$model)
qplot(displ,hwy,data="mpg")
qplot(displ,hwy,data=mpg)
head(airquality)
?na.rm
??na.rm
range(airquality$Ozone)
range(airquality$Ozone,na.rm)
range(airquality$Ozone,na.rm = TRUE)
dim(airquality)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab="Month",ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title(main="Ozone and Wind in New York City")
with(airquality,plot(Wind,Ozone))
title(main="Ozone and Wind in New York City")
length(par())
names(par())
par()$spin
par()$pin
par()$fg
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,type="n")
title("Wind and Ozone in NYC")
may = subset(month==5)
may = subset(airquality,month==5)
may = subset(airquality,Month==5)
may <- subset(airquality,Month==5)
?par
plot(may$Wind,may$Ozone,col="blue",pch=2)
plot(may$Wind,may$Ozone,col="blue",pch=17)
points(may$Wind,may$Ozone,col="blue",pch=17)
plot(airquality$Wind,airquality$Ozone,type="n")
title("Wind and Ozone in NYC")
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality, Month!=5)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend(topright,c(17,8),c("blue","red"),c("May","Other Months"))
legend("topright",c(17,8),c("blue","red"),c("May","Other Months"))
legend("topright",c(17,8),c("blue","red"),c("May","Other Months"))
?legend
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(median(airquality$Wind),lty=2,ltw=2)
s
testInheritedMethods()
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
par(mfrow=c(1,3),mar= c(4,4,2,1), oma = c(0,0,2,0))
plot(airquality$Wind,airquality$Ozone,main="Ozone and Wind")
plot(airquality$Ozone,airquality$Solar.R,main="Ozone and Solar Radiation")
plot(airquality$Solar.R,airquality$Ozone,main="Ozone and Solar Radiation")
plot(airquality$Temp,airquality$Ozone,main="Ozone and Temperature")
mtext("Ozone and Weather in New York City")
mtext("Ozone and Weather in New York City",outer=TRUE)
head(airquality)
xyplot(Ozone~Wind,airquality)
xyplot(Ozone~Wind,airquality,col="red",pch=8,main="Big Apple Data")
xyplot(Ozone~Wind,data= airquality,col="red",pch=8,main="Big Apple Data")
xyplot(Ozone~Wind,data= airquality,pch=8,col="red",main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month),data= airquality,layout=c(5,1))
xyplot(Ozone~Wind | Month,data= airquality,layout=c(5,1))
p <- xyplot(Ozone~Wind,airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f,layout=c(2,1))
v1
v2
myedit("plot1.R")
source(ppathtofile("plot1.R",local=TRUE)
"Ozone and Weather in New York City"
source(ppathtofile("plot1.R",local=TRUE)
"Ozone and Weather in New York City"
source(pathtofile("plot1.R"),local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color,diamonds$cut)
myedit("myLabel.R")
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local=TRUE)
xyplot(price~carat|color*cut,diamonds,strip=FALSE,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
xyplot(price~carat|color*cut,diamonds,pch=20,xlab=myxlab,ylab=myylab,main=mymain)
swirl()
library("swirl")
swirl()
str(mpg)
qplot(displ,hwy,mpg)
qplot(displ,hwy,data = mpg)
qplot(displ,hwy,data = mpg,color=3)
qplot(displ,hwy,data = mpg,color=drv)
qplot(displ,hwy,data = mpg,color=drv,geom=c("point","smooth"))
qplot(hwy,data = mpg,color=drv)
qplot(y= hwy,data = mpg,color=drv)
myhigh
qplot(drv,hwy,mpg,geom="boxplot")
qplot(drv,hwy,mpg,geom="boxplot")
qplot(drv,hwy,data = mpg,geom="boxplot")
qplot(drv,hwy,data = mpg,geom="boxplot",color=manufacturer)
qplot(hwy,data=mpg,fill=drv)
qplot(displ,hwy,data = mpg,facets= .~ drv)
qplot(hwy,data = mpg,facets= drv ~ .,binwidth=2)
qplot(displ,hwy,data=mpg,geom="pointsmooth",facets= .~drv)
qplot(displ,hwy,data=mpg,geom="point","smooth",facets= .~drv)
qplot(displ,hwy,data=mpg,geom="point" and "smooth",facets= .~drv)
qplot(displ,hwy,data=mpg,geom="point and smooth",facets= .~drv)
qplot(displ,hwy,data=mpg,facets= .~drv)
qplot(displ,hwy,data=mpg,geom=c("point","smooth"),facets= .~drv)
g <- ggplot(mpg,aes(displ,hwy))
summary(g)
g
g+geom_print()
g+geom_point()
g+geom_smooth()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(aes=drv,size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2,aes=drv)
g+geom_point(size=4,alpha=1/2,aes(color=drv))
g+geom_point(size=4,alpha=1/2,aes(color=drv))+labs(title="Swirl Rules!",xlab="Displacement",ylab="Hwy Mileage")
g+geom_point(size=4,alpha=1/2,aes(color=drv))+labs(title="Swirl Rules!")+labs(xlab="Displacement",ylab="Hwy Mileage")
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(xlab="Displacement",ylab="Hwy Mileage")
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement",y="Hwy Mileage")
g+geom_point(aes(color=drv),size=2,alpha=1/2)+geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx,myy,type="l",ylim=c(-3,3))
g <- ggplot(testdat,aes(x=myx,y=myy))
g+geom_line(mapping = )
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(ylim=c(-3,3))
g <- ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(size=2,method="lm",se=FALSE,color="black")
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(size=2,method="lm",se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
sessionInfo()
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
remove.packages("ggplot2")
find.package("ggplot2")
find.package("ggplot2",lib.loc=TRUE)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
sessionInfo()
library("ggplot2")
sessionInfo()
g+geom_point()+facet_grid(drv~cyl,margins=TRUE)+geom_smooth(size=2,method="lm",se=FALSE,color="black")+labs(x="Displacement",y="Highway Mileage",title="Swirl Rules!")
shiny::runApp('C:/Users/igorf/OneDrive/ING5/DATA ANALYTICS/TP/Shiny_app')
install.packages("ggmosaic")
runApp('C:/Users/igorf/OneDrive/ING5/DATA ANALYTICS/TP/Shiny_app')
runApp('C:/Users/igorf/OneDrive/ING5/DATA ANALYTICS/TP/Shiny_app')
runApp('C:/Users/igorf/OneDrive/ING5/DATA ANALYTICS/TP/Shiny_app')
runApp('C:/Users/igorf/OneDrive/ING5/DATA ANALYTICS/TP/Shiny_app')
bp<- ggplot(df, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
bp<- ggplot(df_ucba, aes(x="", y=Admit, fill=Gender))+
geom_bar(width = 1, stat = "identity")
data("UCBAdmissions")
df_ucba <- tbl_df(UCBAdmissions)
bp<- ggplot(df_ucba, aes(x="", y=Admit, fill=Gender))+
geom_bar(width = 1, stat = "identity")
bp
pie <- bp + coord_polar("y", start=0)
pie
bp<- ggplot(df_ucba %>% filter(Gender=="Male"), aes(x="", y=Admit, fill=Gender))+
geom_bar(width = 1, stat = "identity")
pie
pie <- bp + coord_polar("y", start=0)
pie
bp<- ggplot(df_ucba %>% filter(Gender=="Male"), aes(x="", y=Gender, fill=Admit))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
pie
bp<- ggplot(df_ucba %>% filter(Gender=="Male"), aes(x=n, y=Gender, fill=Admit))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
pie
bp<- ggplot(df_ucba %>% filter(Gender=="Male"), aes(x=n, y=Gender, fill=Admit))+
geom_bar(width = 1, stat = "identity") + coord_polar("y",start=0)
bp
pie <- ggplot(df_ucba %>% filter(Gender=="Male"), aes(x=n, y=Gender, fill=Admit))+
geom_bar(width = 1, stat = "identity") + coord_polar("y",start=0)
pie
pie <- ggplot(df_ucba %>% filter(Gender=="Male"), aes(x="", y=Gender, fill=Admit))+
geom_bar(width = 1, stat = "identity") + coord_polar("y",start=0)
pie
pie <- ggplot(df_ucba %>% filter(Gender=="Male"), aes(x=factor(1), y=Gender, fill=Admit))+
geom_bar(width = 1, stat = "identity") + coord_polar("y",start=0)
pie
df_plot <- df_ucba %>% filter(Gender=="Male") %>% group_by(Gender)
df_plot
df_plot <- df_ucba %>% filter(Gender=="Male") %>% group_by(Admit)
df_plot
df_plot <- df_ucba %>% filter(Gender=="Male") %>% group_by(Admit,Gender)
df_plot
df_plot <- df_ucba %>% filter(Gender=="Male") %>% group_by(Admit,Gender,DEpt)
df_plot <- df_ucba %>% filter(Gender=="Male") %>% group_by(Admit,Gender,Dept)
df_plot
df_plot <- df_ucba %>% group_by(Admit,Gender,Dept)
df_plot
df_plot <- df_ucba %>% group_by(Admit)
df_plot
df_ucba
df_ucba %>% group_by(Gender)
df_ucba %>% group_by(Admit)
df_ucba %>% group_by(admit)
df_ucba %>% group_by(Admit)
df_ucba %>% group_by(Admit,Gender,Dept)
df_ucba %>% group_by(Dept)
library(dplyr)
df_ucba %>% group_by(Dept)
df_ucba %>% group_by(Dept,Admit)
df_plot <- df_ucba %>% group_by(Gender)
df_plot
df_plot <- df_ucba %>% group_by(Admit)
df_plot
detach(package:plyr)
df_plot <- df_ucba %>% dplyr::group_by(Admit)
df_plot
packageVersion("dplyr")
type(df_ucba)
head(df_ucba)
g <- group_by(Admit)
g <- group_by(df_ucba,Admit)
group_data(g)
g <- group_by(df_ucba,Admit,Gender)
group_data(g)
df_plot <- df_ucba %>% group_by(Admit,Gender)
df_plot
shiny::runApp('C:/Users/igorf/OneDrive/ING5/DATA ANALYTICS/TP/Shiny_app')
runApp('C:/Users/igorf/OneDrive/ING5/DATA ANALYTICS/TP/Shiny_app')
ggplot(data = df_ucba) +
geom_mosaic(aes(weight= n, x = product(Dept,Admit), fill=Admit)) +
facet_grid(Gender~.) +
scale_fill_manual(values=c("#56B4E9", "#D46A6A"))
df_ucba <- tbl_df(UCBAdmissions)
ggplot(data = df_ucba) +
geom_mosaic(aes(weight= n, x = product(Dept,Admit), fill=Admit)) +
facet_grid(Gender~.) +
scale_fill_manual(values=c("#56B4E9", "#D46A6A"))
V <- runif(2,0,6)
V
plot(X[,1],X[,2],xlab="X1",ylab="X2")
X <-  as.data.frame(cbind(c(1, 1, 0, 5, 6, 4),c(4, 3, 4, 1, 2, 0)))
plot(X[,1],X[,2],xlab="X1",ylab="X2")
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V)
V
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V,col="red")
V <- runif(2,0,6)
V <- runif(2,0,6)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V,col="red")
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V,col="red")
V1 <- runif(2,0,6)
V2 <- runif(2,0,6)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,6)
V2 <- runif(2,0,6)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,6)
V2 <- runif(2,0,6)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,6)
V2 <- runif(2,0,6)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,6)
V2 <- runif(2,0,6)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,6)
V2 <- runif(2,0,6)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,6)
V2 <- runif(2,0,6)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,6)
V2 <- runif(2,0,6)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,6)
V2 <- runif(2,0,6)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,6)
V2 <- runif(2,0,6)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,6)
V2 <- runif(2,0,6)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,6)
V2 <- runif(2,0,6)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,6)
V2 <- runif(2,0,6)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,4)
V2 <- runif(2,0,4)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,4)
V2 <- runif(2,0,4)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,4)
V2 <- runif(2,0,4)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,4)
V2 <- runif(2,0,4)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,4)
V2 <- runif(2,0,4)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,4)
V2 <- runif(2,0,4)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,4)
V2 <- runif(2,0,4)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,4)
V2 <- runif(2,0,4)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,4)
V2 <- runif(2,0,4)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,4)
V2 <- runif(2,0,4)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,4)
V2 <- runif(2,0,4)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,4)
V2 <- runif(2,0,4)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1 <- runif(2,0,4)
V2 <- runif(2,0,4)
plot(X[,1],X[,2],xlab="X1",ylab="X2")
points(V1,V2,col="red")
V1
v2
V2
setwd("C:/Users/igorf/OneDrive/ING5/DATA ANALYTICS/TP Hierarchical")
